---
title: "LC-MS data"
author: "JinYoung Park"
date: 2025-07-24
draft: false
editor_options:
  chunk_output_type: inline
---

##On this page

##Experiment design
<img src="figs/planariaExperiment.png" width="60%" style="display:block; margin-left: auto; margin-right: auto;"/>


##Package Used
```{r}
#| message: false
#| warning: false
#| error: false

library(tidyverse)
library(tidymodels)



```

## Loading Data
```{r}
ID <- read.csv("csv/BOA Team Metabolomics Master Sample Decode.csv")
data <- read.csv("csv/MBL BoA Run 2 Neg.csv")
dataPos <- read.csv("csv/MBL BoA Run 2 Pos.csv")

#split planaria data from the scan
pladata <- data %>% 
  select(compound, any_of(ID$sampleId))

pladataPos <- dataPos %>% 
  select(compound, any_of(ID$sampleId))

colnames(pladata)
dim(pladata)

plaData <- rbind(pladata, pladataPos)
plaData$compound <- make.unique(plaData$compound)

dim(plaData)

plaDataLong <- pivot_longer(plaData,cols = c(2:13), names_to = "sampleId", values_to = "IC")

plaDataLong <- merge(plaDataLong, ID, by = "sampleId")

dim(plaDataLong)
colnames(plaDataLong)
table(plaDataLong$time)


```

## Prep the Data
```{r}
#set a seed in order to make the analysis reproducible
set.seed(11)

# change into wide
plaDataWide <- plaDataLong %>%
  pivot_wider(
    id_cols = c(sampleId, organism, time), 
    names_from = compound,
    values_from = IC)

pca_recipe <- recipe(~ ., data = plaDataWide) %>%
  update_role(sampleId, organism, time, new_role = "id")

summary(pca_recipe)

pca_recipe <- recipe(~ ., data = plaDataWide) %>%
  update_role(sampleId, organism, time, new_role = "id") %>% 
  step_scale(all_predictors()) %>%  
  step_center(all_predictors()) %>%
  step_pca(all_predictors(), id = "pca")

pca_recipe

# 4. recipe 적용
pca_prepped <- prep(pca_recipe)
pca_prepped
pca_baked <- bake(pca_prepped, plaDataWide)
pca_baked

ggplot(pca_baked, aes(x = PC1, y = PC2, color = time)) +
  geom_point(size = 3, alpha = 0.8) +
  theme_minimal() +
  labs(title = "PCA of LC-MS IC values", x = "PC1", y = "PC2")

ggplot(pca_baked, aes(x = PC1, y = PC3, color = time, label = sampleId)) +
  geom_point(size = 3, alpha = 0.8) +
  geom_text(check_overlap = TRUE, color = "black") +
  theme_minimal() +
  labs(title = "PCA of LC-MS IC values", x = "PC1", y = "PC3")

```
# Volcano Plot

```{r}

regFxn <- possibly(function(dat){
  lm(log2(IC+0.01) ~ time, data = dat) %>% 
    broom::tidy()
}, otherwise = NULL)

planStatsTime <- plaDataLong %>% 
  nest(statData = -compound) %>% 
  mutate(df = map(statData, regFxn)) %>% 
  unnest_legacy(df) %>% 
  filter(term != "(Intercept)") %>% 
  mutate(p.adj = p.adjust(p.value, method = "BH"))

planStatsTime %>% 
  mutate(term = factor(term,
                       levels = c("time6h", 
                                  "time24h", 
                                  "time48h"))) %>% 
  ggplot(aes(x = estimate, y = -log10(p.adj))) +
  geom_point() +
  facet_wrap(~term) +
  geom_hline(yintercept = 1.3)


```

